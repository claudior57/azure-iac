#!/bin/bash

####################################################################################
# defining the main information about the subscription that is going to be created #
####################################################################################
#set the company name
export COMPANY_NAME=iaclab
export COMPANY_DOMAIN=iaclab.com
export SUBSCRIPTION_NAME="iaclab"
#set the registered domain
export AAD_REGISTERED_DOMAIN=@iaclab.com

#from this point everything is auto generated by the script
echo "Creating the basic infrastructure for IAC"
export RESOURCE_GROUP=devops-$COMPANY_NAME
export SERVICE_PRINCIPAL=devops-$COMPANY_NAME
export STORAGE_ACCOUNT=devops${COMPANY_NAME}
export STORAGE_CONTAINER=${COMPANY_NAME}-iac
export SUBSCRIPTION_ID=$(az account show -s="$SUBSCRIPTION_NAME" |grep id |  cut -d'"' -f 4)

echo "Creating the resource group $RESOURCE_GROUP"
az group create -l eastus -n $RESOURCE_GROUP --subscription $SUBSCRIPTION_ID
echo "$RESOURCE_GROUP Created successfully"

echo "Creating the storage account $STORAGE_ACCOUNT"
az storage account create -n $STORAGE_ACCOUNT -l eastus -g $RESOURCE_GROUP --sku Standard_LRS
echo "$STORAGE_ACCOUNT Created successfully"

echo "Getting the storage Keys from $STORAGE_ACCOUNT"
export STORAGE_KEY=$(az storage account keys list -g $RESOURCE_GROUP -n $STORAGE_ACCOUNT | grep "value" -m 1| cut -d'"' -f 4 )
echo $STORAGE_KEY
echo "Storage Key Acquired successfully"

echo "Creating the storage container $STORAGE_CONTAINER on the storage account $STORAGE_ACCOUNT"
az storage container create -n $STORAGE_CONTAINER --account-name $STORAGE_ACCOUNT --account-key $STORAGE_KEY
echo "$STORAGE_CONTAINER Created successfully"

echo "Creating the Active Directory groups"

export TF_VAR_devops_group_id=$(az ad group create --display-name devops-admin --mail-nickname devops-admin --query objectId -o tsv)
#export TF_VAR_developer_group_id=$(az ad group create --display-name developer --mail-nickname developers --query objectId -o tsv)
#export TF_VAR_end_user_group_id=$(az ad group create --display-name user --mail-nickname user --query objectId -o tsv)
#
echo "Active Directory Groups Created successfully"

# create the terraform service-principal and get the password and tenant info
echo "creating service-principal for terraform"
OUTPUT_JSON=$(az ad sp create-for-rbac --name="$SERVICE_PRINCIPAL" --role="Contributor" --scopes="/subscriptions/${SUBSCRIPTION_ID}")
DEVOPS_SP_OBJECT_ID=$(az ad sp list --display-name "devops-iaclab" --query '[].objectId' --output tsv)
az role assignment create --role 18d7d88d-d35e-4fb5-a5c3-7773c20a72d9 --assignee-object-id $DEVOPS_SP_OBJECT_ID --scope /subscriptions/$SUBSCRIPTION_ID

echo $OUTPUT_JSON:
export ARM_CLIENT_ID=$(echo $OUTPUT_JSON |grep "appId" |  cut -d'"' -f 4)
export ARM_CLIENT_SECRET=$(echo $OUTPUT_JSON |grep "password" |  cut -d'"' -f 16)
export ARM_TENANT_ID=$(echo $OUTPUT_JSON |grep "tenant" |  cut -d'"' -f 20)
export ARM_SUBSCRIPTION_ID=$SUBSCRIPTION_ID

echo "creating service-principal-secret"
export SECRET_JSON=$( az ad sp create-for-rbac --name="k8s_sp" --sdk-auth --scopes="/subscriptions/${SUBSCRIPTION_ID}" | base64 -w0)
K8S_SP_OBJECT_ID=$(az ad sp list --display-name "k8s_sp" --query '[].objectId' --output tsv)
az role assignment create --role 4d97b98b-1d4f-4787-a291-c67834d212e7 --assignee-object-id $K8S_SP_OBJECT_ID --scope /subscriptions/$SUBSCRIPTION_ID
az role assignment create --role "DNS Zone Contributor" --assignee $K8S_SP_OBJECT_ID  --scope /subscriptions/$SUBSCRIPTION_ID

export TF_VAR_k8s_sp_id=$(echo $SECRET_JSON | base64 -d | grep "clientId"|cut -d'"' -f 4)
export TF_VAR_k8s_sp_secret=$(echo $SECRET_JSON | base64 -d | grep "clientSecret"|cut -d'"' -f 4)

echo "#!/bin/bash" > envs-stg.sh
echo "export ARM_CLIENT_ID=$ARM_CLIENT_ID" >> envs-stg.sh
echo "export ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET" >> envs-stg.sh
echo "export ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID" >> envs-stg.sh
echo "export ARM_TENANT_ID=$ARM_TENANT_ID" >> envs-stg.sh
echo "export TF_VAR_tenant_id=$ARM_TENANT_ID" >> envs-stg.sh
echo "export TF_VAR_devops_group_id=$TF_VAR_devops_group_id" >> envs-stg.sh
echo "export TF_VAR_k8s_sp_id=$TF_VAR_k8s_sp_id" >> envs-stg.sh
echo "export TF_VAR_k8s_sp_secret=$TF_VAR_k8s_sp_secret" >> envs-stg.sh
echo "export SECRET_JSON=$SECRET_JSON" >> envs-stg.sh